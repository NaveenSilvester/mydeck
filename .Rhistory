ls()
install.packages("shiny")
ls()
? nrow
rm(list=ls())
data(cars)
View(cars)
counts <- table(mtcars$gear)
View(counts)
barplot(counts, main="car distribution", xlab="number of gears")
class(counts)
a <- 1
?log
log2(1)
log2(0)
args(rnorm)
args(write.table)
rnorm
con <- url("http://www.jhsph.edu", "r")
x <- readLines(con)
head(x)
con <- url("http://www.google.com", "r")
x <- readLines(con)
head(x)
args(url)
args(lapply)
png
jpg
jpg
gif
pdf
pwd
pwd()
ls
install.packages("slidify")
install.packages("slidify")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find.packages("devtools")
find.package("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
ls
ls
?nchar
a <- ".MathJax_Error {color: #CC0000; font-style: italic}"
nchar(a, type="chars")
nchar(a, type="chars", allowNA = FALSE)
a <- "</style><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}"
a <- c("</style><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}")
a <- c("</style><style type=\"text/css\">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}")
nchar(a, type="chars", allowNA = FALSE)
library(xml)
install.packages("xml")
library(XML)
install.packages("XML")
setwd("c:/Users/ssnave/MyCalculator/")
require(devtools)
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
setwd("c:/Users/ssnave/")
rm(list=ls())
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
author("mydeck")
slidify("index.Rmd")
slidify("index.Rmd")
author("mydeck")
slidify("index.Rmd")
library(stringr)
library(yaml)
slidify("index.Rmd")
slidify("index.Rmd")
?stringr
install.packages("C:/Users/ssnave/Downloads/stringr_0.6.2.tar.gz", repos = NULL, type = "source")
library(stringr)
slidify("index.Rmd")
sessionInfo()
devtools::install_github("muschellij2/slidify")
index = file.path(tempdir(), "index.Rmd")
download.file("https://gist.githubusercontent.com/tcarnus/1b9d210adaba2bb7cb07/raw/a3936b32cba774eb18dc2025985eaac2c3286922/index.Rmd", destfile=index, method="curl")
library(slidify)
slidify(index)
system(sprintf("open %s", gsub("[.]Rmd", ".html", index)))
slidify("index.Rmd")
browseUrl("index.html")
library(knitr)
browseUrl("index.html")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
publish(user='NaveenSilvester', repo='git@github.com:NaveenSilvester/mydeck.git', host='github')
publish(user='NaveenSilvester', repo='NaveenSilvester.github.io:NaveenSilvester/mydeck.git', host='github')
publish(user='NaveenSilvester', repo='github.io:NaveenSilvester/mydeck.git', host='github')
publish(user='NaveenSilvester', repo='git@github.com:NaveenSilvester/mydeck.git', host='github')
publish(user='NaveenSilvester', repo='mydeck.git', host='github')
slidify("index.Rmd")
browseURL("index.html")
